{"version":3,"sources":["components/Header.js","components/Book.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Book","id","role","aria-multiselectable","this","props","Books","map","book","key","data-toggle","data-parent","href","aria-expanded","aria-controls","volumeInfo","title","aria-labelledby","authors","ratingsCount","publisher","pageCount","target","rel","saleInfo","buyLink","src","undefined","imageLinks","thumbnail","alt","searchInfo","textSnippet","Component","Search","type","placeholder","Placeholder","onChange","SearchProps","App","search","query","state","Query","fetch","then","response","ok","json","Error","status","result","setState","items","catch","error","console","log","e","value","FilterBooks","filter","filterBook","toLowerCase","includes","changeSearch","bind","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uOAYeA,G,MAVA,WACb,OACE,yBAAKC,UAAU,sCACb,yBAAKA,UAAU,sBACb,uEC4GOC,E,iLAtGX,OACE,yBAAKD,UAAU,6BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,yBACEA,UAAU,yBACVE,GAAG,eACHC,KAAK,UACLC,uBAAqB,QAEpBC,KAAKC,MAAMC,MAAMC,IAAI,SAACC,EAAMP,GAC3B,OACE,yBAAKQ,IAAKR,EAAIF,UAAU,mBACtB,yBAAKA,UAAU,cAAcG,KAAK,MAAMD,GAAG,eACzC,uBACEF,UAAU,YACVW,cAAY,WACZC,cAAY,gBACZC,KAAI,WApBP,eAoBO,OAAmBX,GACvBY,gBAAc,QACdC,gBAAA,WAtBH,eAsBG,OAAgCb,IAEhC,wBAAIF,UAAU,oBACXS,EAAKO,WAAWC,MACjB,uBAAGjB,UAAU,qCAKnB,yBACEE,GAAE,UAhCH,eAgCG,OAAkBA,GACpBF,UAAU,WACVG,KAAK,WACLe,kBAAgB,cAChBN,cAAY,iBAEZ,yBAAKZ,UAAU,aACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,YACb,2BACE,yCADF,IACqBS,EAAKO,WAAWG,SAErC,2BACE,sCADF,IACkBV,EAAKO,WAAWI,cAElC,2BACE,yCADF,IACqBX,EAAKO,WAAWK,WAErC,2BACE,2CADF,IACuBZ,EAAKO,WAAWM,WAEvC,uBACEtB,UAAU,6BACVuB,OAAO,SACPC,IAAI,sBACJX,KAAMJ,EAAKgB,SAASC,SAJtB,kBASF,yBAAK1B,UAAU,YACb,yBAEE2B,SACiCC,IAA/BnB,EAAKO,WAAWa,WACZpB,EAAKO,WAAWa,WAAWC,UAC3B,GAENC,IAAI,OAKV,yBAAK/B,UAAU,oBACb,2BACG,IACD,0CACA,kCACqB4B,IAApBnB,EAAKuB,WACFvB,EAAKuB,WAAWC,YAChB,+C,GApFbC,aCIJC,EAVA,SAAA7B,GACb,OACE,2BACEN,UAAU,gBACVoC,KAAK,SACLC,YAAa/B,EAAMgC,YACnBC,SAAUjC,EAAMkC,eCmEPC,E,YAlEb,aAAe,IAAD,8BACZ,+CAQFC,OAAS,WACP,IAAIC,EAAQ,EAAKC,MAAMC,MAEvBC,MAAM,GAAD,OADY,iDAAmDH,IAEjEI,KAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAMC,MAAM,gCAAD,OAAiCH,EAASI,WAGxDL,KAAK,SAAAM,GAAM,OAAI,EAAKC,SAAS,CAAE/C,MAAO8C,EAAOE,UAC7CC,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAnB9B,EAAKb,MAAQ,CACXrC,MAAO,GACPsC,MAAO,cAETa,QAAQC,IAAI,EAAKf,MAAMC,OANX,E,iFAyBZxC,KAAKqC,W,mCAGMkB,GACY,KAAnBA,EAAErC,OAAOsC,MACXxD,KAAKiD,SAAS,CAAET,MAAO,cAAgBxC,KAAKqC,QAE5CrC,KAAKiD,SAAS,CAAET,MAAOe,EAAErC,OAAOsC,OAASxD,KAAKqC,U,+BAMhDgB,QAAQC,IAAItD,KAAKuC,MAAMC,OAFhB,MAIkBxC,KAAKuC,MAAtBrC,EAJD,EAICA,MAAOsC,EAJR,EAIQA,MAEXiB,EAAcvD,EAAMwD,OAAO,SAAAC,GAAU,OACvCA,EAAWhD,WAAWC,MAAMgD,cAAcC,SAASrB,EAAMoB,iBAO3D,OACE,yBAAKjE,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,eACb,kBAAC,EAAD,CACEwC,YAAanC,KAAK8D,aAAaC,KAAK/D,MACpCiC,YAAajC,KAAKuC,MAAMC,SAI5B,kBAAC,EAAD,CAAMtC,MAAOuD,S,GA7DH5B,aCIEmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjC,KAAK,SAAAkC,GACjCA,EAAaC,gB","file":"static/js/main.d61acdbf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-light blue lighten-4\">\r\n      <div className=\"container navStyle\">\r\n        <h3>Searching Books Live with React App</h3>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\n//eslint-disable-next-line\r\n\r\n// n\r\n// import { array } from \"prop-types\";\r\n// import BookList from \"./BookList\";\r\n\r\nclass Book extends Component {\r\n  render() {\r\n    let anchorLink = \"collapseTwo\";\r\n\r\n    return (\r\n      <div className=\"container accordion_style\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-8 offset-sm-2\">\r\n            <div\r\n              className=\"accordion md-accordion\"\r\n              id=\"accordionEx1\"\r\n              role=\"tablist\"\r\n              aria-multiselectable=\"true\"\r\n            >\r\n              {this.props.Books.map((book, id) => {\r\n                return (\r\n                  <div key={id} className=\"card card_style\">\r\n                    <div className=\"card-header\" role=\"tab\" id=\"headingTwo1\">\r\n                      <a\r\n                        className=\"collapsed\"\r\n                        data-toggle=\"collapse\"\r\n                        data-parent=\"#accordionEx1\"\r\n                        href={`#${anchorLink}${id}`}\r\n                        aria-expanded=\"false\"\r\n                        aria-controls={`#${anchorLink}${id}`}\r\n                      >\r\n                        <h5 className=\"mb-0 title_style\">\r\n                          {book.volumeInfo.title}\r\n                          <i className=\"fas fa-angle-down rotate-icon\" />\r\n                        </h5>\r\n                      </a>\r\n                    </div>\r\n\r\n                    <div\r\n                      id={`${anchorLink}${id}`}\r\n                      className=\"collapse\"\r\n                      role=\"tabpanel\"\r\n                      aria-labelledby=\"headingTwo1\"\r\n                      data-parent=\"#accordionEx1\"\r\n                    >\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row row_info\">\r\n                          <div className=\"col-sm-8\">\r\n                            <p>\r\n                              <b>Author(s):</b> {book.volumeInfo.authors}\r\n                            </p>\r\n                            <p>\r\n                              <b>Rating:</b> {book.volumeInfo.ratingsCount}\r\n                            </p>\r\n                            <p>\r\n                              <b>Publisher:</b> {book.volumeInfo.publisher}\r\n                            </p>\r\n                            <p>\r\n                              <b>No of pages:</b> {book.volumeInfo.pageCount}\r\n                            </p>\r\n                            <a\r\n                              className=\"btn btn-default btn_custom\"\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              href={book.saleInfo.buyLink}\r\n                            >\r\n                              Buy this Book\r\n                            </a>\r\n                          </div>\r\n                          <div className=\"col-sm-4\">\r\n                            <img\r\n                              // onError={this.addDefaultSrc}\r\n                              src={\r\n                                book.volumeInfo.imageLinks !== undefined\r\n                                  ? book.volumeInfo.imageLinks.thumbnail\r\n                                  : \"\"\r\n                              }\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"description_book\">\r\n                          <p>\r\n                            {\" \"}\r\n                            <b>Description</b>\r\n                            <br />\r\n                            {book.searchInfo !== undefined\r\n                              ? book.searchInfo.textSnippet\r\n                              : \"No description were provided.\"}\r\n                          </p>\r\n                          {/* <p>{book.volumeInfo.description}</p> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  // Book.propTypes = {\r\n  //   Book: propTypes.object.isRequired\r\n  // }\r\n}\r\n// App.propTypes = {\r\n//   books: PropTypes.object\r\n// };\r\nexport default Book;\r\n","import React from \"react\";\r\n\r\nconst Search = props => {\r\n  return (\r\n    <input\r\n      className=\"search__input\"\r\n      type=\"search\"\r\n      placeholder={props.Placeholder}\r\n      onChange={props.SearchProps}\r\n    />\r\n  );\r\n};\r\nexport default Search;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Book from \"./components/Book\";\nimport Search from \"./components/Search\";\n\n// import propTypes from \"prop-types\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Books: [],\n      Query: \"javascript\"\n    };\n    console.log(this.state.Query);\n  }\n\n  search = () => {\n    let query = this.state.Query;\n    const BASE_URL = \"https://www.googleapis.com/books/v1/volumes?q=\" + query;\n    fetch(`${BASE_URL}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw Error(`Request rejected with status ${response.status}`);\n        }\n      })\n      .then(result => this.setState({ Books: result.items }))\n      .catch(error => console.log(error));\n  };\n\n  componentDidMount() {\n    this.search();\n  }\n\n  changeSearch(e) {\n    if (e.target.value === \"\") {\n      this.setState({ Query: \"javascript\" }, this.search);\n    } else {\n      this.setState({ Query: e.target.value }, this.search);\n    }\n  }\n\n  render() {\n    // const { Books } = this.state;\n    console.log(this.state.Query);\n\n    const { Books, Query } = this.state;\n    // let bookJavascript = this.state.Query;\n    let FilterBooks = Books.filter(filterBook =>\n      filterBook.volumeInfo.title.toLowerCase().includes(Query.toLowerCase())\n    );\n\n    // console.log(filterBook));\n\n    //\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"searchClass\">\n          <Search\n            SearchProps={this.changeSearch.bind(this)}\n            Placeholder={this.state.Query}\n          />\n        </div>\n\n        <Book Books={FilterBooks} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}